version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: knexpresso
      POSTGRES_PASSWORD: knexpresso_password
      POSTGRES_DB: knexpresso_db
    ports:
      - "5432:5432"
    volumes:
      - ./databases/postgres/dbInit.sql:/docker-entrypoint-initdb.d/dbInit.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knexpresso -d knexpresso_db"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: knexpresso_db
      MYSQL_USER: knexpresso
      MYSQL_PASSWORD: knexpresso_password
    ports:
      - "3306:3306"
    volumes:
      - ./tests/integration/databases/mysql/dbInit.sql:/docker-entrypoint-initdb.d/dbInit.sql
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--sql_mode=NO_ENGINE_SUBSTITUTION',
      '--innodb_buffer_pool_size=256M',
      '--default-time-zone=+00:00'
    ]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Mssql_password1!"
    ports:
      - "1433:1433"
    volumes:
      - ./tests/integration/databases/mssql/dbInit.sql:/docker-entrypoint-initdb.d/dbInit.sql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Mssql_password1!' -Q 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  # SQLite does not require a service as it is a file-based database.
  # If needed, you can include a service here for consistency, but it's not necessary.

networks:
  default:
    name: integration_test_network
